搜索慢日志
分片等级的慢搜索日志允许记录缓慢搜索(查询和获取执行)的日志信息到一个专用的日志文件。
阈值可以独立设置在查询阶段或者在获取阶段,下面是一个示例:
#index.search.slowlog.threshold.query.warn: 10s
#index.search.slowlog.threshold.query.info: 5s
#index.search.slowlog.threshold.query.debug: 2s
#index.search.slowlog.threshold.query.trace: 500ms

#index.search.slowlog.threshold.fetch.warn: 1s
#index.search.slowlog.threshold.fetch.info: 800ms
#index.search.slowlog.threshold.fetch.debug: 500ms
#index.search.slowlog.threshold.fetch.trace: 200ms
默认情况下,没有被启用(设置为 -1 )。 等级( warn , info , debug , trace )允许控制相应日志级别的日志将被记录。
并不是所有的都必须被配置(例如,只有 warn 阈值可以设置)。 多个等级的好处是能够迅速通过“grep“定位到数据。
日志记录是在分片级别范围,意味着一个搜索请求的执行在一个特定的分片。
它不包含整个搜索请求,可以分发到指定分片上以便执行。 在分片级别上记录日志的好处是在实际执行的机器上按照相应日志等级记录日志。
所有的设置是索引级设置(每个索引可以有不同的值),可以在运行时修改，通过使用索引的更新设置 API 。
日志文件是默认配置使用以下配置(发现于 logging.yml ):
index_search_slow_log_file:
  type: dailyRollingFile
  file: ${path.logs}/${cluster.name}_index_search_slowlog.log
  datePattern: "'.'yyyy-MM-dd"
  layout:
    type: pattern
    conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"
索引慢日志
注：索引慢日志,类似搜索慢日志的功能。 日志文件以 _index_indexing_slowlog.log结尾。
日志和配置的阈值在elasticsearch.yml文件里面，方法和搜索slowlog配置一样。 索引slowlog示例:
#index.indexing.slowlog.threshold.index.warn: 10s
#index.indexing.slowlog.threshold.index.info: 5s
#index.indexing.slowlog.threshold.index.debug: 2s
#index.indexing.slowlog.threshold.index.trace: 500ms
该索引慢日志文件，默认配置如下 logging.yml文件:
index_indexing_slow_log_file:
        type: dailyRollingFile
        file: ${path.logs}/${cluster.name}_index_indexing_slowlog.log
        datePattern: "'.'yyyy-MM-dd"
        layout:
          type: pattern
          conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"

Index Slow Log
Search Slow Log
Shard level slow search log allows to log slow search (query and fetch executions) into a dedicated log file.
Thresholds can be set for both the query phase of the execution, and fetch phase, here is a sample:
#index.search.slowlog.threshold.query.warn: 10s
#index.search.slowlog.threshold.query.info: 5s
#index.search.slowlog.threshold.query.debug: 2s
#index.search.slowlog.threshold.query.trace: 500ms

#index.search.slowlog.threshold.fetch.warn: 1s
#index.search.slowlog.threshold.fetch.info: 800ms
#index.search.slowlog.threshold.fetch.debug: 500ms
#index.search.slowlog.threshold.fetch.trace: 200ms
By default, none are enabled (set to -1). Levels (warn, info, debug, trace) allow to control under which logging level the log will be logged. Not all are required to be configured (for example, only warn threshold can be set). The benefit of several levels is the ability to quickly “grep” for specific thresholds breached.
The logging is done on the shard level scope, meaning the execution of a search request within a specific shard. It does not encompass the whole search request, which can be broadcast to several shards in order to execute. Some of the benefits of shard level logging is the association of the actual execution on the specific machine, compared with request level.
All settings are index level settings (and each index can have different values for it), and can be changed in runtime using the index update settings API.
The logging file is configured by default using the following configuration (found inlogging.yml):
index_search_slow_log_file:
  type: dailyRollingFile
  file: ${path.logs}/${cluster.name}_index_search_slowlog.log
  datePattern: "'.'yyyy-MM-dd"
  layout:
    type: pattern
    conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"
Index Slow log
p.The indexing slow log, similar in functionality to the search slow log. The log file is ends with _index_indexing_slowlog.log. Log and the thresholds are configured in the elasticsearch.yml file in the same way as the search slowlog. Index slowlog sample:
#index.indexing.slowlog.threshold.index.warn: 10s
#index.indexing.slowlog.threshold.index.info: 5s
#index.indexing.slowlog.threshold.index.debug: 2s
#index.indexing.slowlog.threshold.index.trace: 500ms
The index slow log file is configured by default in the logging.yml file:
index_indexing_slow_log_file:
        type: dailyRollingFile
        file: ${path.logs}/${cluster.name}_index_indexing_slowlog.log
        datePattern: "'.'yyyy-MM-dd"
        layout:
          type: pattern
          conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"